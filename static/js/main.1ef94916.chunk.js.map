{"version":3,"sources":["Components/Filter/Filter.module.css","App.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleSubmit","e","preventDefault","props","OnSaveContacts","reset","setState","handleChange","currentTarget","value","className","s","container","onSubmit","this","label","htmlFor","input","type","onChange","id","btn","Component","Filter","OnFilterContacts","placeholder","ContactList","contacts","onDeleteContact","list","map","item","text","onClick","App","filter","formSubmitHandler","data","myContacts","contact","toLocaleLowerCase","includes","alert","prevState","deleteContact","contactId","handleChangeFilter","filterContactsByName","console","log","getContacts","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ef94916.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3t1SB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__37qaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__3EmjT\",\"container\":\"ContactForm_container__n6TEh\",\"btn\":\"ContactForm_btn__s3TZD\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from '../ContactForm/ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.OnSaveContacts(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    return (\n      <div className={s.container}>\n        <form onSubmit={this.handleSubmit}>\n          <label className={s.label} htmlFor={this.nameInputId}>\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              id={this.nameInputId}\n            />\n          </label>\n          <label className={s.label} htmlFor={this.numberInputId}>\n            Number\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              id={this.numberInputId}\n            />\n          </label>\n\n          <button className={s.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../Filter/Filter.module.css';\n\nconst Filter = ({ value, OnFilterContacts }) => (\n  <>\n    <label>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={OnFilterContacts}\n        placeholder=\" Fined contacts by name\"\n      />\n    </label>\n  </>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  OnFilterContacts: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../ContactList/ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <>\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <li className={s.item} key={id}>\n            <span className={s.text}>{name}: </span>\n            <span className={s.text}>{number}</span>\n            <button className={s.btn} onClick={() => onDeleteContact(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/ContactList/ContactList';\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    console.log('App componentDidMount');\n\n    const getContacts = localStorage.getItem('contacts');\n    console.log(getContacts);\n\n    const parsedContacts = JSON.parse(getContacts);\n    console.log(parsedContacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Обновилось поле contacts, записываю contacts в хранилище ');\n\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitHandler = data => {\n    // console.log(data);\n\n    const myContacts = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n\n    const getContacts = this.state.contacts.map(contact =>\n      contact.name.toLocaleLowerCase(),\n    );\n\n    const isGetContactAlready = getContacts.includes(\n      data.name.toLocaleLowerCase(),\n    );\n\n    if (isGetContactAlready) {\n      alert(`${data.name} is already in contacts!`);\n    } else {\n      this.setState(prevState => {\n        return {\n          contacts: [myContacts, ...prevState.contacts],\n        };\n      });\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  handleChangeFilter = e => {\n    const { value } = e.currentTarget;\n    this.setState({ filter: value });\n  };\n\n  filterContactsByName = () => {\n    return this.state.contacts.filter(contact =>\n      contact.name\n        .toLocaleLowerCase()\n        .includes(this.state.filter.toLocaleLowerCase()),\n    );\n  };\n\n  render() {\n    const contacts = this.filterContactsByName();\n    return (\n      <>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm OnSaveContacts={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter\n          value={this.state.filter}\n          OnFilterContacts={this.handleChangeFilter}\n        />\n        <ContactList contacts={contacts} onDeleteContact={this.deleteContact} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// ReactDOM.render(<App />, document.querySelector('#root'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__Msav8\",\"item\":\"ContactList_item__1r8AL\",\"text\":\"ContactList_text__3fZav\",\"btn\":\"ContactList_btn__3w-1T\"};"],"sourceRoot":""}